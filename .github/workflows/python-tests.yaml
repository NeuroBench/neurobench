name: Test code and documentation

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev


jobs:
  test-code-style:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install Poetry
      run: |
        python -m pip install --upgrade pip
        pip install poetry

    - name: Install dependencies
      run: |
        poetry install --with code-quality

    - name: Check with Black
      run: |
        poetry run black --check .

    - name: Check with docformatter
      run: |
        poetry run docformatter .

    - name: Run Flake8
      run: |
        poetry run pflake8 .

  test-code:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          poetry install --with dev

      - name: Run tests
        run: |
          poetry run pytest --cov --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          directory: ./coverage/reports/
          env_vars: OS,PYTHON
          fail_ci_if_error: true
          files: ./coverage.xml,!./cache
          flags: unittests
          name: coverage-neurobench
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true